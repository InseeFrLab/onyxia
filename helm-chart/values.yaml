imagePullSecrets: []
hostAliases: []

ingress:
  enabled: false
  # The name of the Ingress Class associated with this ingress
  ingressClassName: ""
  annotations:
    {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

route:
  enabled: false
  annotations: {} # route.openshift.io/termination: "reencrypt"
  host: chart-example.local
  tls:
    termination: edge
    # key:
    # certificate:
    # caCertificate:
    # destinationCACertificate:
  wildcardPolicy: None

web:
  name: web
  replicaCount: 1
  image:
    repository: inseefrlab/onyxia-web
    tag: 4.14.13
    pullPolicy: IfNotPresent

  ## Pod priority settings
  ## ref: https://kubernetes.io/docs/concepts/configuration/pod-priority-preemption/
  ##
  priorityClassName: ""

  podLabels: {}
  podSecurityContext: {} # fsGroup: 2000
  securityContext:
    {}
    # capabilities:
    #   drop:
    #   - ALL
    # readOnlyRootFilesystem: true
    # runAsNonRoot: true
    # runAsUser: 1000
  containerPort: 8080
  service:
    type: ClusterIP
    port: 80
  resources:
    #limits:
    requests:
      cpu: 200m
      memory: 128Mi
  extraVolumes: []
  extraVolumeMounts: []
  nodeSelector: {}
  tolerations: []
  affinity: {}
  env:

  serviceAccount:
    # Specifies whether a service account should be created
    create: true
    # Annotations to add to the service account
    annotations: {}
    # The name of the service account to use.
    # If not set and create is true, a name is generated using the fullname template
    name:
  livenessProbe:
    enabled: true
    path: /
    failureThreshold: 3
    periodSeconds: 10
    successThreshold: 1
    timeoutSeconds: 1
  readinessProbe:
    enabled: true
    path: /
    failureThreshold: 3
    periodSeconds: 10
    successThreshold: 1
    timeoutSeconds: 1
  startupProbe:
    enabled: false
    path: /
    failureThreshold: 3
    periodSeconds: 10
    successThreshold: 1
    timeoutSeconds: 1


api:
  name: api
  replicaCount: 1
  image:
    repository: inseefrlab/onyxia-api
    tag: v2.0.0
    pullPolicy: IfNotPresent
  contextPath: /api

  ## Pod priority settings
  ## ref: https://kubernetes.io/docs/concepts/configuration/pod-priority-preemption/
  ##
  priorityClassName: ""

  podLabels: {}
  podSecurityContext: {} # fsGroup: 2000
  securityContext:
    {}
    # capabilities:
    #   drop:
    #   - ALL
    # readOnlyRootFilesystem: true
    # runAsNonRoot: true
    # runAsUser: 1000
  containerPort: 8080
  service:
    type: ClusterIP
    port: 80
  resources:
    #limits:
    requests:
      cpu: 1
      memory: 1Gi
  extraVolumes: []
  extraVolumeMounts: []
  nodeSelector: {}
  tolerations: []
  affinity: {}
  env: #authentication.mode: "openidconnect"
  regions:
    #[
    #   {

  #     "regionId": "kub",
  #     "type": "KUBERNETES",
  #     "namespace-prefix": "user-",
  #     "publish-domain": "fakedomain.kub.example.com",
  #     "cloudshell": {
  #       "catalogId": "inseefrlab-helm-charts-datascience",
  #       "packageName": "cloudshell"
  #     }
  #   }
  # ]
  catalogs:
    # [
    #   {
    #     "id": "inseefrlab-helm-charts-datascience",
    #     "name": "Inseefrlab datascience",
    #     "description": "Services for datascientists. https://github.com/InseeFrLab/helm-charts-datascience",
    #     "maintainer": "innovation@insee.fr",
    #     "location": "https://inseefrlab.github.io/helm-charts-datascience",
    #     "status": "PROD",
    #     "type": "helm",
    #   }
    # ]
  livenessProbe:
    enabled: true
    path: /public/healthcheck
    failureThreshold: 3
    periodSeconds: 10
    successThreshold: 1
    timeoutSeconds: 1
  readinessProbe:
    enabled: true
    path: /public/healthcheck
    failureThreshold: 3
    periodSeconds: 10
    successThreshold: 1
    timeoutSeconds: 1
  startupProbe:
    enabled: false
    path: /public/healthcheck
    failureThreshold: 3
    periodSeconds: 10
    successThreshold: 1
    timeoutSeconds: 1

  serviceAccount:
    # Specifies whether a service account should be created
    create: true
    # If true, the created service account is bound to a ClusterRole (default : cluster-admin) ;
    # if false, it is instead bound to the admin Role, and thus scoped to the namespace
    clusterAdmin: false
    # Annotations to add to the service account
    annotations: {}
    # The name of the service account to use.
    # If not set and create is true, a name is generated using the fullname template
    name:
